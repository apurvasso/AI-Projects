import java.util.Scanner;

public class Perceptron {
static double threshold,learning_rate;
//static int target[] = {0,0,0,1};
static double w1,w2;
static Scanner sc=new Scanner(System.in);
static int and[][]={
{0,0},
{0,1},
{1,0},
{1,1}
};
static int or[][]={
{0,0},
{0,1},
{1,0},
{1,1}
};
public static void and(double w1,double
w2,double threshold,double learning_rate,int iteration) {//AND gate
perceptron training rule
//int
//target = {0,0,0,1};
double wixi;
int output;
System.out.println("w1: "+w1+" || w2: "+w2+" || Threshold:
"+threshold+" || n: "+learning_rate);

int tar;
for(int i=0;i<4;i++)
{
if(i == 0 | i==1 | i==2) {
tar = 0;
}
else {
tar = 1;
}
System.out.println("("+(i+1)+") "+"A:"+and[i][0]+"  B: "+and[i][1]+"
target: "+tar);
wixi=w1*and[i][0]+w2*and[i][1];
System.out.println("wixi: "+wixi);
output = greaterthanone(wixi);
if(output == tar) {
System.out.println("output equals target");
}
else {
System.out.println("Output is not equals to target. ");
w1=w1+learning_rate*(tar-output)*and[i][0];
w2=w2+learning_rate*(tar-output)*and[i][1];
System.out.println(".........................................");
System.out.println("w1: "+w1+"  w2: "+w2+" Threshold: "+threshold+"
Learning rate: "+learning_rate);
iteration++;
Analyze(-1, w1, w2, threshold, learning_rate, iteration);
break;
}

System.out.println("Answer: ");
System.out.println("w1: "+w1+"  w2: "+w2);
}
}
public static void or(double w1,double
w2,double threshold,double learning_rate,int iteration) {//AND gate
perceptron training rule
//int
//target = {0,0,0,1};
double wixi;
int output;
System.out.println("w1: "+w1+" || w2: "+w2+" || Threshold:
"+threshold+" || n: "+learning_rate);

int tar;
for(int i=0;i<4;i++)
{
if(i==1|i==2|i==3){
tar = 1;
}
else{
tar = 0;
}
System.out.println("("+(i+1)+") "+"A:"+and[i][0]+"  B: "+and[i][1]+"
target: "+tar);
wixi=w1*and[i][0]+w2*and[i][1];
System.out.println("wixi: "+wixi);
output = greaterthanone(wixi);
if(output == tar) {
System.out.println("output equals target");
}
else {
System.out.println("Output is not equals to target. ");
w1=w1+learning_rate*(tar-output)*and[i][0];
w2=w2+learning_rate*(tar-output)*and[i][1];
System.out.println(".........................................");
System.out.println("w1: "+w1+"  w2: "+w2+" Threshold: "+threshold+"
Learning rate: "+learning_rate);
iteration++;
Analyze(-1, w1, w2, threshold, learning_rate, iteration);
break;
}

System.out.println("Answer: ");
System.out.println("w1: "+w1+"  w2: "+w2+" Threshold: "+threshold+"
Learning rate: "+learning_rate);
}
}
static void Analyze(int status,double w1, double w2, double threshold,
double learningRate, int itr)
{
if(status==-1)
{
and(w1, w2, threshold, learningRate, itr);
}
}

static void AnalyzeOR(int status,double w1, double w2, double
threshold, double learningRate, int itr)
{
if(status==-1)
{
or(w1, w2, threshold, learningRate, itr);
}
}
public static int greaterthanone(double wixi) {
if(wixi>1) {
return 1;
}
else {
return 0;
}
}
public static void main(String args[]) {
Scanner sc = new Scanner(System.in);
System.out.println("Enter weight1");
w1 = sc.nextDouble();
System.out.println("Enter weight 2");
w2 = sc.nextDouble();
System.out.println("Enter threshold : ");
int threshold = sc.nextInt();
System.out.println("Enter learning rate : ");
double learning_rate = sc.nextDouble();
System.out.println("1.AND\n");
System.out.println("2.OR\n");
System.out.println("Enter choice\n");
int ch;
do {
ch = sc.nextInt();

    switch (ch) {
case 1:
and(w1,w2,threshold,learning_rate,1);
break;

case 2:
or(w1,w2,threshold,learning_rate,1);
break;
default:
break;
}
}while(ch==1 || ch==2);
}
}
/*
 * Enter weight1
1.2
Enter weight 2
0.6
Enter threshold :
1
Enter learning rate :
0.5
1.AND

2.OR

Enter choice

1
w1: 1.2 || w2: 0.6 || Threshold: 1.0 || n: 0.5
(1) A:0  B: 0 target: 0
wixi: 0.0
output equals target
Answer:
w1: 1.2  w2: 0.6
(2) A:0  B: 1 target: 0
wixi: 0.6
output equals target
Answer:
w1: 1.2  w2: 0.6
(3) A:1  B: 0 target: 0
wixi: 1.2
Output is not equals to target.
.........................................
w1: 0.7  w2: 0.6 Threshold: 1.0 Learning rate: 0.5
w1: 0.7 || w2: 0.6 || Threshold: 1.0 || n: 0.5
(1) A:0  B: 0 target: 0
wixi: 0.0
output equals target
Answer:
w1: 0.7  w2: 0.6
(2) A:0  B: 1 target: 0
wixi: 0.6
output equals target
Answer:
w1: 0.7  w2: 0.6
(3) A:1  B: 0 target: 0
wixi: 0.7
output equals target
Answer:
w1: 0.7  w2: 0.6
(4) A:1  B: 1 target: 1
wixi: 1.2999999999999998
output equals target
Answer:
w1: 0.7  w2: 0.6
2
w1: 1.2 || w2: 0.6 || Threshold: 1.0 || n: 0.5
(1) A:0  B: 0 target: 0
wixi: 0.0
output equals target
Answer:
w1: 1.2  w2: 0.6 Threshold: 1.0 Learning rate: 0.5
(2) A:0  B: 1 target: 1
wixi: 0.6
Output is not equals to target.
.........................................
w1: 1.2  w2: 1.1 Threshold: 1.0 Learning rate: 0.5
w1: 1.2 || w2: 1.1 || Threshold: 1.0 || n: 0.5
(1) A:0  B: 0 target: 0
wixi: 0.0
output equals target
Answer:
w1: 1.2  w2: 1.1
(2) A:0  B: 1 target: 0
wixi: 1.1
Output is not equals to target.
.........................................
w1: 1.2  w2: 0.6000000000000001 Threshold: 1.0 Learning rate: 0.5
w1: 1.2 || w2: 0.6000000000000001 || Threshold: 1.0 || n: 0.5
(1) A:0  B: 0 target: 0
wixi: 0.0
output equals target
Answer:
w1: 1.2  w2: 0.6000000000000001
(2) A:0  B: 1 target: 0
wixi: 0.6000000000000001
output equals target
Answer:
w1: 1.2  w2: 0.6000000000000001
(3) A:1  B: 0 target: 0
wixi: 1.2
Output is not equals to target.
.........................................
w1: 0.7  w2: 0.6000000000000001 Threshold: 1.0 Learning rate: 0.5
w1: 0.7 || w2: 0.6000000000000001 || Threshold: 1.0 || n: 0.5
(1) A:0  B: 0 target: 0
wixi: 0.0
output equals target
Answer:
w1: 0.7  w2: 0.6000000000000001
(2) A:0  B: 1 target: 0
wixi: 0.6000000000000001
output equals target
Answer:
w1: 0.7  w2: 0.6000000000000001
(3) A:1  B: 0 target: 0
wixi: 0.7
output equals target
Answer:
w1: 0.7  w2: 0.6000000000000001
(4) A:1  B: 1 target: 1
wixi: 1.3
output equals target
Answer:
w1: 0.7  w2: 0.6000000000000001


 */


